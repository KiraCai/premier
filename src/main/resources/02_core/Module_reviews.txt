1.
Все примитивные типы и их размеры
Какая размерность у boolean?
Что такое char? Почему над ним можно выполнять арифметические операции?
Какие есть виды приведения типов? Что такое явные и неявные приведения, с чем связано их наличие?
Какие классы-обертки знаешь?
Расскажи про unboxing, autoboxing в обертках
Расскажи про pool строк и pool примитивов
Как добавить String’у в pool строк?
Разница между String, StringBuilder и StringBuffer?
Что такое массив и какие на нём есть ограничения?
Какая максимальная длина массива?
Что такое метод, возвращаемое значение, аргументы метода?
Что такое инкремент и декремент?
Какие логические операции знаешь? Таблица истинности операторов.
Какие есть условные операторы?
Какие есть циклы в Java? Чем отличаются друг от друга?
Что такое continue и break?
Что такое рекурсия? Недостатки и преимущества?


2.
Что такое ООП? В чем его плюсы?
Перечислите основные принципы ООП
Что такое инкапсуляция? Приведите пример инкапсуляции?
Что такое полиморфизм? Приведите пример полиморфизма?
Что такое наследование? Приведите пример наследования? Зачем оно нужно?
Что такое класс? Объект?
Как передаются объекты в метод?
Что такое переопределение метода в Java?
Что такое перегрузка метода в Java?
Что такое нативные методы, их плюсы и минусы?
Какие модификаторы доступа могут быть у класса?
Что такое final? Что может быть final? Как они работают?
Как реализована неизменность String?
Как реализовать свой Immutable тип данных?
Что такое ключевое слово static?  Что может быть static?
Могут ли нестатические методы перегрузить статические?
Что такое пакет? Как создать пакет?
Что такое конструкторы? Конструктор по-умолчанию?
Расскажи, что такое this и super? Когда мы обязаны использовать this и super?
Класс Object и все методы кроме wait, notify, notifyAll
Зачем нужен метод finalize?
Из-за чего происходят коллизии?
В чём разница между instanceOf и getClass?
Перечислите методы именно класса Enum?
Что такое интерфейс? Когда использовать интерфейс?
Можно ли создать поля в интерфейсе?
Есть ли в Java множественное наследование? Зачем реализовывать интерфейс интерфейсу?
Можно ли создавать статик методы в интерфейсах?
Что такое абстрактный метод?
Что такое абстрактный класс? Чем отличается от обычного?

3.
Что такое исключение? Для чего они нужны?
Расскажи про иерархию исключений?
В чём разница между проверяемыми исключениями и непроверяемыми? В чём разница с точки зрения синтаксиса и идеологическая при использовании?
Можно ли обработать непроверяемое исключение?
Нужно ли ловить Error исключения?
Как бросить исключение? Можно ли бросить НЕ новое исключение?
Расскажи про информацию, которая находится внутри исключения? Как с ней работать?
Что такое подавленные исключения? Как достать подавленное исключение?
Какую информацию можно получить из StackTraceElement?
Расскажи про конструкцию try-catch-finally?
Что такое try-with-resources? Как работает эта конструкция?
Расскажи, как правильно ловить исключения? Иерархия catch блоков
Можно ли одном catch обработать несколько исключений?

4.
Что такое потоки ввода-вывода? Как это реализовано в Java?
Что делает метод read?
Что такое System.in, что такое System.out?
Что делает flush?  Почему важно закрывать потоки?
Расскажи про классы Reader и Writer?
Как преобразовать считанные байты в символы? Какой класс для этого используется?
Отличие Scanner’a от BufferedReader’a?
Отличие пакета io от nio?
Расскажи про класс File? Как создать новый файл на жестком диске?
В чём отличие File от Path?
В чем разница между абсолютным и относительным путем?
Что такое клонирование? Как реализовано клонирование в Java?
Как удалить директорию с файлами?
В чём разница между поверхностным и глубоким клонированием? Как реализовать глубокое клонирование?
Что такое сериализация и десериализация?
Назовите несколько форматов сериализации.
Какие поля не сериализуются?
Как сериализовать статическое поле?

5.
Что такое generic и для чего они нужны?
Зачем вообще ввели дженерики? Как до дженериков программировали?
Что можно параметризовать?
Как параметризовать статический метод?
Что такое raw type? К чему приводит использование raw type?
Если поле типизировано дженериком как в байт коде будет представлен этот тип?
Что такое даймонд оператор?
Что такое wildcard?
Расскажи про иерархию коллекций?
Расскажи отличие List от Set?
Расскажи отличие ArrayList от LinkedList?
Когда лучше использовать ArrayList, а когда LinkedList?
В чём разница между Queue и Deque и Stack?
Отличие двусвязного и односвязного списка?
Как работает HashSet?
Как работает метод contains в ArrayList, LinkedList, HashSet?
В чём разница между Iterable и Iterator?
Что такое Iterator?
В каких случаях нужно использовать iterator? И почему?
Что такое Map? Что должно быть уникальным?
Может ли null быть ключём в HashMap?
Как работает HashMap? Расскажите подробно, как работает метод put? Что происходит при коллизии?
Как работает метод get в HashMap?

6.
Зачем нужно функциональное программирование, где оно применяется и в чем его отличие от программирования в стиле ооп или в процедурном стиле?
Что такое функциональный интерфейс?
Зачем нужна аннотация @FunctionalInterface? Обязательна ли она?
Что такое default методы в интерфейсе и для чего они были введены?
Может ли функциональный интерфейс содержать что-то кроме абстрактного метода?
Все способы реализации функционального интерфейса?
Что такое метод референс?
Что такое «анонимные классы»?
Как создать экземпляр анонимного класса?
Что такое лямбда-выражение? Как его записать?
Расскажите про Comparator и Comparable?
Что такое стримы? Для чего они нужны? Когда их лучше использовать?
Какие есть виды стримов?
Способы создания Стрима?
Что такое терминальная операция?
Что возвращают промежуточные операции над стримом?
В чем разница map и flatMap?
Что такое ленивая инициализация стрима?
Можно ли вызвать 2 терминальные операции?
Что будет, если терминальной операции не будет?
Может ли стрим использоваться повторно?
Для чего нужны параллельные стримы?
В чём разница между forEach и peek?